# Generated by Django 5.0 on 2025-05-24 08:08

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('emp_id', models.CharField(max_length=20, unique=True)),
                ('department', models.CharField(max_length=50)),
                ('position', models.CharField(max_length=50)),
                ('date_of_hire', models.DateField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('marital_status', models.CharField(choices=[('Married', 'Married'), ('Single', 'Single'), ('Divorced', 'Divorced'), ('Separated', 'Separated'), ('Widowed', 'Widowed')], max_length=50)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('race', models.CharField(blank=True, max_length=50)),
                ('hispanic_latino', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=3)),
                ('recruitment_source', models.CharField(blank=True, max_length=100)),
                ('salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('engagement_survey', models.FloatField(help_text='Score from 1-5')),
                ('emp_satisfaction', models.IntegerField(help_text='Score from 1-5')),
                ('special_projects_count', models.IntegerField(default=0)),
                ('days_late_last_30', models.IntegerField(default=0)),
                ('absences', models.IntegerField(default=0)),
                ('performance_score', models.CharField(blank=True, choices=[('Exceeds', 'Exceeds Expectations'), ('Fully Meets', 'Fully Meets Expectations'), ('Needs Improvement', 'Needs Improvement'), ('PIP', 'Performance Improvement Plan')], max_length=20, null=True)),
                ('predicted_score', models.IntegerField(blank=True, help_text='Predicted score: 4=Exceeds, 3=Fully Meets, 2=Needs Improvement, 1=PIP', null=True)),
                ('prediction_date', models.DateTimeField(blank=True, null=True)),
                ('prediction_confidence', models.FloatField(blank=True, help_text='Confidence score for the prediction (0-1)', null=True)),
                ('prediction_details', models.TextField(blank=True, help_text='JSON string with detailed prediction info', null=True)),
                ('employment_status', models.CharField(choices=[('Active', 'Active'), ('Voluntarily Terminated', 'Voluntarily Terminated'), ('Terminated for Cause', 'Terminated for Cause')], default='Active', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('check_in', models.TimeField(blank=True, null=True)),
                ('check_out', models.TimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('PRESENT', 'Present'), ('ABSENT', 'Absent'), ('LATE', 'Late'), ('HALF_DAY', 'Half Day'), ('ON_LEAVE', 'On Leave')], max_length=20)),
                ('hours_worked', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='employee_predictor.employee')),
            ],
            options={
                'ordering': ['-date', 'employee'],
            },
        ),
        migrations.CreateModel(
            name='Leave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('leave_type', models.CharField(choices=[('ANNUAL', 'Annual Leave'), ('SICK', 'Sick Leave'), ('UNPAID', 'Unpaid Leave'), ('MATERNITY', 'Maternity Leave'), ('PATERNITY', 'Paternity Leave'), ('OTHER', 'Other')], max_length=20)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('reason', models.TextField()),
                ('approval_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leave_requests', to='employee_predictor.employee')),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Payroll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('basic_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('overtime_hours', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('overtime_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('bonuses', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('deductions', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('tax', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('net_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('APPROVED', 'Approved'), ('PAID', 'Paid'), ('CANCELLED', 'Cancelled')], default='DRAFT', max_length=20)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payroll_records', to='employee_predictor.employee')),
            ],
            options={
                'ordering': ['-period_end', 'employee'],
            },
        ),
        migrations.CreateModel(
            name='PerformanceHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_date', models.DateField()),
                ('performance_score', models.CharField(choices=[('Exceeds', 'Exceeds Expectations'), ('Fully Meets', 'Fully Meets Expectations'), ('Needs Improvement', 'Needs Improvement'), ('PIP', 'Performance Improvement Plan')], max_length=20)),
                ('score_value', models.IntegerField(help_text='Numeric value 1-4')),
                ('notes', models.TextField(blank=True)),
                ('goals_met', models.BooleanField(default=False)),
                ('improvement_areas', models.TextField(blank=True)),
                ('strengths', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_history', to='employee_predictor.employee')),
                ('reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Performance Histories',
                'ordering': ['-review_date', 'employee'],
            },
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['emp_id'], name='employee_pr_emp_id_bf13aa_idx'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['department'], name='employee_pr_departm_b65a3e_idx'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['predicted_score'], name='employee_pr_predict_023fe6_idx'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['prediction_date'], name='employee_pr_predict_071989_idx'),
        ),
        migrations.AddIndex(
            model_name='attendance',
            index=models.Index(fields=['employee', 'date'], name='employee_pr_employe_e2719e_idx'),
        ),
        migrations.AddIndex(
            model_name='attendance',
            index=models.Index(fields=['date', 'status'], name='employee_pr_date_b0f2a0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='attendance',
            unique_together={('employee', 'date')},
        ),
        migrations.AddIndex(
            model_name='leave',
            index=models.Index(fields=['employee', 'start_date'], name='employee_pr_employe_e9371d_idx'),
        ),
        migrations.AddIndex(
            model_name='leave',
            index=models.Index(fields=['status', 'start_date'], name='employee_pr_status_5b7f5f_idx'),
        ),
        migrations.AddIndex(
            model_name='payroll',
            index=models.Index(fields=['employee', 'period_start'], name='employee_pr_employe_7dcb5b_idx'),
        ),
        migrations.AddIndex(
            model_name='payroll',
            index=models.Index(fields=['period_end', 'status'], name='employee_pr_period__1cad3a_idx'),
        ),
        migrations.AddIndex(
            model_name='performancehistory',
            index=models.Index(fields=['employee', 'review_date'], name='employee_pr_employe_b5f6a3_idx'),
        ),
        migrations.AddIndex(
            model_name='performancehistory',
            index=models.Index(fields=['performance_score', 'review_date'], name='employee_pr_perform_1077a6_idx'),
        ),
    ]
